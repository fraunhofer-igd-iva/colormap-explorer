/*
 * Copyright 2014 Fraunhofer IGD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package algorithms.quality;

import algorithms.JndRegionComputer;
import algorithms.sampling.CircularSampling;
import algorithms.sampling.SamplingStrategy;
import colormaps.Colormap2D;

/**
 * The number of distinguishable colors
 * @author Martin Steiger
 */
public class ColorExploitation implements ColormapQuality
{
	private SamplingStrategy sampling;

	public ColorExploitation(SamplingStrategy sampling)
	{
		this.sampling = sampling;
	}
	
	@Override
	public double getQuality(Colormap2D colormap2d)
	{
		JndRegionComputer computer = new JndRegionComputer(colormap2d, sampling, 5.0);
		int count = computer.getPoints().size();
		return count;
	}

	@Override
	public String getName()
	{
		return "JND colors";
	}

	@Override
	public String getDescription()
	{
		return "The number of distinguishable colors";
	}

}
